SOMOS EL GRUPO 7



/*'''int img [][][] = LoadImatge(fitxer_imatge, files, columnes, components, bytes_sample, signed/unsigned)
    --> test print 10 primers i últims samples --> comparar FIJI

    float Entropy(Image)

    raw image--> |------------------
    parametres imatge
    operacio


    nom_app imatge.raw files columnes components bytes_sample unsigned 1
    2 3
    3

    '''
    print("Compressor d'imatges")

*/

/*
Implementar un archivo de salida (string) para guardar cualquier matriz en un output.raw(string).

Hacer una comparación (diff) para verificar si está bien.

void LoadFile;

void SaveFile(Image[][][], int bytes_per_sample, int signo, string path); // int 32 bits
                       // 1 --> 8 bits
                       // 2 --> 16 bits

float Entropy(int image);

int [][][] Quantization(int[][][] image, int qstep, int direction);
*/

/*
sessió 2 (27/09/2024)
implementar un output file (string) per guardar qualsevol matriu en un output.raw(string)+

fer un diff per saber si està bé

void LoadFile

void SaveFile(Image[][][], int bytes_per_sample, int signe, string path) int 32 bits
                       1--> 8bits
                       2--> 16bits
float Entropy(int image)

int [][][] Quantization(int[][][]image, int qstep, int direction)
 */

************CLASSE 18/10/24****************
     //PSNR = (2^b - 1)/MS
     // MSE = (1/Ni * Nj) * Sum((mat_org[i.. - mat_cuant[i...)^2)
     // PAE = max((mat_org[i.. - mat_cuant[i...))
PAE(X,X')
MSE(X,X')
PSNR(X,X'): Mayor entropia, mayor PSNR. Escala logaritmica

hacer las metricas y poder comparar una imagen con distintos valores de qstep y que haga las graficas (o devuelva los puntos)
qstep1,mse1
qstep2, mse2

Relacionar:
- PSNR, QSTEP
- PSNR desquantizada, H(X) quantizada
- MSE, QSTEP
- MSE, H(X)
- PAE, QSTEP
- PAE, H(X)

Profe:
modificar la organitzacio codi
divisio de quantitzacio es per valor absolut (revisar formula bona), afegir direccio per quantitzar i desquantitzar

************CLASSE 25/10/24****************
transformada wavelet (mirar foto) forward i backward
quantitzacio --> transformacio
o transformacio --> desquantitzacio
i per tirar enrere, el mateix ordre

RHAAR_FWD(int[] input_vector, int[] output_vector) primero las filas (para hacer la vertical) y luego las columnas para la horizontal

RHAAR_INV(int[] input(que es l'output del fwd), int[] output (que es input de fwd))

**********CLASE 08/11/24****************
prediccion, fer un predictor per la img de la chica 8 bits para minimizar la entropia de R al maximo que sea reversible
mirar foto
